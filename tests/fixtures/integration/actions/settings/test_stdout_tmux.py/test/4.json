{
    "name": "test[print a settings sample to stdout, mode auto  clear && ansible-navigator settings --sample --ee False --ll debug --mode interactive]",
    "index": 4,
    "comment": "print a settings sample to stdout, mode auto",
    "additional_information": {
        "present": [
            "#   time-zone: UTC"
        ],
        "absent": [],
        "compared_fixture": false
    },
    "output": [
        "---",
        "ansible-navigator:",
        "#   ansible:",
        "#     config:",
        "#       # Help options for ansible-config command in stdout mode",
        "#       help: False",
        "#       # Specify the path to the ansible configuration file",
        "#       path: ./ansible.cfg",
        "#     # Extra parameters passed to the corresponding command",
        "#     cmdline: \"--forks 15\"",
        "#     doc:",
        "#       # Help options for ansible-doc command in stdout mode",
        "#       help: False",
        "#       plugin:",
        "#         # Specify the plugin name",
        "#         name: debug",
        "#         # Specify the plugin type, 'become', 'cache', 'callback', 'cliconf',",
        "#         # 'connection', 'httpapi', 'inventory', 'lookup', 'module', 'netconf',",
        "#         # 'shell', 'strategy' or 'vars'",
        "#         type: module",
        "#     inventory:",
        "#       # Help options for ansible-inventory command in stdout mode",
        "#       help: True",
        "#       # Specify an inventory file path or comma separated host list",
        "#       entries:",
        "#         - host1,",
        "#         - router1,router2",
        "#         - inventory.yml",
        "#     playbook:",
        "#       # Help options for ansible-playbook command in stdout mode",
        "#       help: False",
        "#       # Specify the playbook name",
        "#       path: site.yml",
        "#   ansible-builder:",
        "#     # Help options for ansible-builder command in stdout mode",
        "#     help: False",
        "#     # Specify the path that contains ansible-builder manifest files",
        "#     workdir: /tmp/",
        "#   ansible-lint:",
        "#     # Specify the path to the ansible-lint configuration file",
        "#     config: ~/lint-config.yml",
        "#     # Path to files on which to run ansible-lint",
        "#     lintables: ~/myproject/",
        "#   ansible-runner:",
        "#     # The directory path to store artifacts generated by ansible-runner",
        "#     artifact-dir: ./runner-artifacts",
        "#     # Keep ansible-runner artifact directories, for last n runs, if set to 0",
        "#     # artifact directories won't be deleted",
        "#     rotate-artifacts-count: 10",
        "#     # The timeout value after which ansible-runner will forcefully stop the",
        "#     # execution",
        "#     timeout: 300",
        "#   # Subcommands",
        "#   app: welcome",
        "#   # The path to collection doc cache",
        "#   collection-doc-cache-path: $HOME/.cache/ansible-navigator/collection_doc_cache.db",
        "#   color:",
        "#     # Enable the use of color for mode interactive and stdout",
        "#     enable: True",
        "#     # Enable or disable terminal color changing support with OSC 4",
        "#     osc4: True",
        "#   editor:",
        "#     # Specify the editor command",
        "#     command: vim_from_setting",
        "#     # Specify if the editor is console based",
        "#     console: False",
        "#   exec:",
        "#     # Specify the exec command should be run in a shell",
        "#     shell: True",
        "#     # Specify the command to run within the execution environment",
        "#     command: /bin/bash",
        "#   execution-environment:",
        "#     # Specify the container engine (auto=podman then docker)",
        "#     container-engine: auto",
        "#     # Extra parameters passed to the container engine command",
        "#     container-options:",
        "#       - \"--net=host\"",
        "#     # Enable or disable the use of an execution environment",
        "#     enabled: True",
        "#     environment-variables:",
        "#       # Specify an existing environment variable to be passed through to and",
        "#       # set within the execution environment (--penv MY_VAR)",
        "#       pass:",
        "#         - ONE",
        "#         - TWO",
        "#         - THREE",
        "#       # Specify an environment variable and a value to be set within the",
        "#       # execution environment (--senv MY_VAR=42)",
        "#       set:",
        "#         KEY1: VALUE1",
        "#         KEY2: VALUE2",
        "#         KEY3: VALUE3",
        "#     # Specify the name of the execution environment image",
        "#     image: quay.io/ansible/creator-ee:latest",
        "#     pull:",
        "#       # Specify any additional parameters that should be added to the pull",
        "#       # command when pulling an execution environment from a container",
        "#       # registry. e.g. --pa='--tls-verify=false'",
        "#       arguments:",
        "#         - \"--tls-verify=false\"",
        "#       # Specify the image pull policy always:Always pull the image,",
        "#       # missing:Pull if not locally available, never:Never pull the image,",
        "#       # tag:if the image tag is 'latest', always pull the image, otherwise",
        "#       # pull if not locally available",
        "#       policy: tag",
        "#     # Specify volume to be bind mounted within an execution environment",
        "#     # (--eev /home/user/test:/home/user/test:Z)",
        "#     volume-mounts:",
        "#       - src: \"/tmp/directory\"",
        "#         dest: \"/tmp/directory\"",
        "#         options: \"Z\"",
        "#   # Specify a host attribute to show in the inventory view",
        "#   images:",
        "#     # Provide detailed information about the selected execution environment",
        "#     # image",
        "#     details:",
        "#       - ansible_collections",
        "#       - ansible_version",
        "#   inventory-columns:",
        "#     - ansible_network_os",
        "#     - ansible_network_cli_ssh_type",
        "#     - ansible_connection",
        "  logging:",
        "#     # Specify the ansible-navigator log level",
        "    level: debug",
        "#     # Specify if log messages should be appended to an existing log file,",
        "#     # otherwise a new log file will be created per session",
        "    append: False",
        "#     # Specify the full path for the ansible-navigator log file",
        "#     file: $PWD/ansible-navigator.log",
        "#   # Specify the user-interface mode",
        "#   mode: interactive",
        "#   playbook-artifact:",
        "#     # Enable or disable the creation of artifacts for completed playbooks.",
        "#     # Note: not compatible with '--mode stdout' when playbooks require user",
        "#     # input",
        "#     enable: True",
        "#     # Specify the path for the playbook artifact to replay",
        "#     replay: /tmp/test_artifact.json",
        "#     # Specify the name for artifacts created from completed playbooks.The",
        "#     # following placeholders are available: {playbook_dir}, {playbook_name},",
        "#     # {playbook_status}, and {time_stamp}",
        "#     save-as: \"{playbook_dir}/{playbook_name}-artifact-{time_stamp}.json\"",
        "#   settings:",
        "#     # Show the effective settings. Defaults, CLI parameters, environment",
        "#     # variables, and the settings file will be combined",
        "#     effective: False",
        "#     # Generate a sample settings file",
        "#     sample: False",
        "#     # Generate a schema for the settings file ('json'= draft-07 JSON Schema)",
        "#     schema: json",
        "#     # Show the source of each current settings entry",
        "#     sources: False",
        "#   # Specify the IANA time zone to use or 'local' to use the system time",
        "#   # zone",
        "#   time-zone: UTC",
        "(venv) bash-5.1$"
    ]
}
