{
    "name": "test[5-:doc-doc for task]",
    "index": 5,
    "comment": "doc for task",
    "additional_information": {
        "present": [
            "module: debug"
        ],
        "absent": [],
        "compared_fixture": false
    },
    "output": [
        "Name: debug (module)",
        "  0│---",
        "  1│doc:",
        "  2│  attributes:",
        "  3│    action:",
        "  4│      description: Indicates this has a corresponding action plugin so some parts",
        "  5│        of the options can be executed on the controller",
        "  6│      support: full",
        "  7│    async:",
        "  8│      description: Supports being used with the C(async) keyword",
        "  9│      support: none",
        " 10│    become:",
        " 11│      description: Is usable alongside become keywords",
        " 12│      support: none",
        " 13│    bypass_host_loop:",
        " 14│      description:",
        " 15│      - Forces a 'global' task that does not execute per host, this bypasses per host",
        " 16│        templating and serial, throttle and other loop considerations",
        " 17│      - Conditionals will work as if C(run_once) is being used, variables used will",
        " 18│        be from the first available host",
        " 19│      - This action will not work normally outside of lockstep strategies",
        " 20│      support: none",
        " 21│    check_mode:",
        " 22│      description: Can run in check_mode and return changed status prediction without",
        " 23│        modifying target",
        " 24│      support: full",
        " 25│    connection:",
        " 26│      description: Uses the target's configured connection information to execute",
        " 27│        code on it",
        " 28│      support: none",
        " 29│    delegation:",
        " 30│      description: Can be used in conjunction with delegate_to and related keywords",
        " 31│      details: Aside from C(register) and/or in combination with C(delegate_facts),",
        " 32│        it has little effect.",
        " 33│      support: partial",
        " 34│    diff_mode:",
        " 35│      description: Will return details on what has changed (or possibly needs changing",
        " 36│        in check_mode), when in diff mode",
        " 37│      support: none",
        " 38│    platform:",
        " 39│      description: Target OS/families that can be operated against",
        " 40│      platforms: all",
        " 41│      support: full",
        " 42│  author:",
        " 43│  - Dag Wieers (@dagwieers)",
        " 44│  - Michael DeHaan",
        " 45│  collection: ansible.builtin",
        " 46│  description:",
        " 47│  - This module prints statements during execution and can be useful for debugging",
        " 48│    variables or expressions without necessarily halting the playbook.",
        " 49│  - Useful for debugging together with the 'when:' directive.",
        " 50│  - This module is also supported for Windows targets.",
        " 51│  filename: /usr/local/lib/python3.8/site-packages/ansible/modules/debug.py",
        " 52│  has_action: true",
        " 53│  module: debug",
        " 54│  options:",
        " 55│    msg:",
        " 56│      default: Hello world!",
        " 57│      description:",
        " 58│      - The customized message that is printed. If omitted, prints a generic message.",
        " 59│      type: str",
        " 60│    var:",
        " 61│      description:",
        " 62│      - A variable name to debug.",
        " 63│      - Mutually exclusive with the C(msg) option.",
        " 64│      - Be aware that this option already runs in Jinja2 context and has an implicit",
        " 65│        C({{ }}) wrapping, so you should not be using Jinja2 delimiters unless you",
        " 66│        are looking for double interpolation.",
        " 67│      type: str",
        " 68│    verbosity:",
        " 69│      default: 0",
        " 70│      description:",
        " 71│      - A number that controls when the debug is run, if you set to 3 it will only",
        " 72│        run debug when -vvv or above.",
        " 73│      type: int",
        " 74│      version_added: '2.1'",
        " 75│      version_added_collection: ansible.builtin",
        " 76│  seealso:",
        " 77│  - module: ansible.builtin.assert",
        " 78│  - module: ansible.builtin.fail",
        " 79│  short_description: Print statements during execution",
        " 80│  version_added: '0.8'",
        " 81│  version_added_collection: ansible.builtin",
        " 82│examples: |-",
        " 83│  - name: Print the gateway for each host when defined",
        " 84│    ansible.builtin.debug:",
        " 85│      msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}",
        " 86│    when: ansible_default_ipv4.gateway is defined",
        " 87│",
        " 88│  - name: Get uptime information",
        " 89│    ansible.builtin.shell: /usr/bin/uptime",
        " 90│    register: result",
        " 91│",
        " 92│  - name: Print return information from the previous task",
        " 93│    ansible.builtin.debug:",
        " 94│      var: result",
        " 95│      verbosity: 2",
        " 96│",
        " 97│  - name: Display all variables/facts known for a host",
        " 98│    ansible.builtin.debug:",
        " 99│      var: hostvars[inventory_hostname]",
        "100│      verbosity: 4",
        "101│",
        "102│  - name: Prints two lines of messages, but only if there is an environment value set",
        "103│    ansible.builtin.debug:",
        "104│      msg:",
        "105│      - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"",
        "106│      - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"",
        "107│metadata: null",
        "108│return: null",
        "109│warnings: []",
        "^b/PgUp page up                                                                                      ^f/PgDn page down                                                                                      ↑↓ scroll                                                                                      esc back                                                                                      :help help                                                                                     Successful"
    ]
}
