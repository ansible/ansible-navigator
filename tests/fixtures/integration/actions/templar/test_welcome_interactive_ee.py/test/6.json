{
    "name": "test[6-:doc-doc for task]",
    "index": 6,
    "comment": "doc for task",
    "additional_information": {
        "present": [
            "module: debug"
        ],
        "absent": [],
        "compared_fixture": false
    },
    "output": [
        "DEBUG (MODULE)",
        " 0│---",
        " 1│doc:",
        " 2│  author:",
        " 3│  - Dag Wieers (@dagwieers)",
        " 4│  - Michael DeHaan",
        " 5│  collection: ansible.builtin",
        " 6│  description:",
        " 7│  - This module prints statements during execution and can be useful for debugging",
        " 8│    variables or expressions without necessarily halting the playbook.",
        " 9│  - Useful for debugging together with the 'when:' directive.",
        "10│  - This module is also supported for Windows targets.",
        "11│  filename: /usr/local/lib/python3.8/site-packages/ansible/modules/debug.py",
        "12│  has_action: true",
        "13│  module: debug",
        "14│  notes:",
        "15│  - This module is also supported for Windows targets.",
        "16│  options:",
        "17│    msg:",
        "18│      default: Hello world!",
        "19│      description:",
        "20│      - The customized message that is printed. If omitted, prints a generic message.",
        "21│      type: str",
        "22│    var:",
        "23│      description:",
        "24│      - A variable name to debug.",
        "25│      - Mutually exclusive with the C(msg) option.",
        "26│      - Be aware that this option already runs in Jinja2 context and has an implicit",
        "27│        C({{ }}) wrapping, so you should not be using Jinja2 delimiters unless you",
        "28│        are looking for double interpolation.",
        "29│      type: str",
        "30│    verbosity:",
        "31│      default: 0",
        "32│      description:",
        "33│      - A number that controls when the debug is run, if you set to 3 it will only",
        "34│        run debug when -vvv or above.",
        "35│      type: int",
        "36│      version_added: '2.1'",
        "37│      version_added_collection: ansible.builtin",
        "38│  seealso:",
        "39│  - module: ansible.builtin.assert",
        "40│  - module: ansible.builtin.fail",
        "41│  short_description: Print statements during execution",
        "42│  version_added: '0.8'",
        "43│  version_added_collection: ansible.builtin",
        "44│examples: |-",
        "45│  - name: Print the gateway for each host when defined",
        "46│    ansible.builtin.debug:",
        "47│      msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}",
        "48│    when: ansible_default_ipv4.gateway is defined",
        "49│",
        "50│  - name: Get uptime information",
        "51│    ansible.builtin.shell: /usr/bin/uptime",
        "52│    register: result",
        "53│",
        "54│  - name: Print return information from the previous task",
        "55│    ansible.builtin.debug:",
        "56│      var: result",
        "57│      verbosity: 2",
        "58│",
        "59│  - name: Display all variables/facts known for a host",
        "60│    ansible.builtin.debug:",
        "61│      var: hostvars[inventory_hostname]",
        "62│      verbosity: 4",
        "63│",
        "64│  - name: Prints two lines of messages, but only if there is an environment value set",
        "65│    ansible.builtin.debug:",
        "66│      msg:",
        "67│      - \"Provisioning based on YOUR_KEY which is: {{ lookup('env', 'YOUR_KEY') }}\"",
        "68│      - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"",
        "69│metadata: null",
        "70│return: null",
        "71│warnings: []",
        "^f/PgUp page up                                                                                      ^b/PgDn page down                                                                                      ↑↓ scroll                                                                                      esc back                                                                                      :help help                                                                                     SUCCESSFUL"
    ]
}
