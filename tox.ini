[base]
pkg_name = ansible_navigator
default_ee = quay.io/ansible/creator-ee:v0.2.0
small_test_ee = quay.io/ansible/python-base
mypy_tmp_dir = mypy_tmp_dir

[tox]
envlist = linters, type, py38, report, clean
minversion = 3.16.1
skipsdist = True
skip_missing_interpreters = true


[testenv]
description = Run pytest under {basepython} ({envpython})
# the pytest command line is not in the project.toml because of issues 
# with catching breakpoints while debugging unit tests
# the number of CPUs is set to 50% b/c CI timeout failures were more likely
# the small test image is used an alternative to the default, but should be it
# one of it's layer
allowlist_externals = cat
                      rm
                      grep
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
    /bin/bash -c 'grep -FInrq "UPDATE_FIXTURES = True" ./tests && exit 1 || exit 0'
    /bin/bash -c 'podman pull {[base]default_ee} || docker pull {[base]default_ee}'
    /bin/bash -c 'podman pull {[base]small_test_ee} || docker pull {[base]small_test_ee}'
    /bin/bash -c 'py.test -vvvv -n `python -c "import multiprocessing; import os; print(int(os.environ.get(\"XDIST_CPU\") or multiprocessing.cpu_count()))"` --dist=loadfile --maxfail=15 --durations=100 --cov ansible_navigator --cov share --cov-report term-missing --cov-branch --showlocals'
setenv =
    TERM = xterm-256color
passenv = HOME
          USER
          XDIST_CPU

[testenv:clean]
description = Erase coverage data
deps = coverage
skip_install = true
commands = coverage erase
           rm -rf ./{[base]mypy_tmp_dir}

[testenv:linters]
description = Enforce quality standards under {basepython} ({envpython})
install_command = pip install {opts} {packages}
commands =
  pylint {[base]pkg_name} --ignore=tm_tokenize
  black -v --diff --check {toxinidir}
  flake8 {posargs}
  yamllint -s .

[testenv:report]
description = Produce coverage report
deps = coverage
skip_install = true
commands =
    coverage report
    cat ./{[base]mypy_tmp_dir}/index.txt

# Note included in the default envlist above since it's destructive
# (requires tmux, git, runs a bunch of commands, etc.)
[testenv:smoke]
description = Run smoke tests under {basepython} ({envpython})
commands = ansible-playbook tests/smoketests/run.yml
allowlist_externals = ansible-playbook

[testenv:type]
description = Verify static typing with MyPy under {basepython} ({envpython})
commands =
    mypy --txt-report ./{[base]mypy_tmp_dir} ./src/{[base]pkg_name} ./tests ./share

[testenv:build-docs]
allowlist_externals =
  git
deps =
  -r{toxinidir}/docs/requirements.in
  # FIXME: re-enable the "-r" + "-c" paradigm once the pip bug is fixed.
  # Ref: https://github.com/pypa/pip/issues/9243
  # -r{toxinidir}/docs/requirements.in
  # -c{toxinidir}/docs/requirements.txt
description = Build The Docs
changedir = {toxinidir}/docs
commands =
  # Retrieve possibly missing commits:
  -git fetch --unshallow
  -git fetch --tags

  # Build the html docs with Sphinx:
  {envpython} -m sphinx \
    -j auto \
    -b html \
    {tty:--color} \
    -a \
    -n \
    -W --keep-going \
    -d "{temp_dir}/.doctrees" \
    . \
    "{envdir}/docs_out"

  # Print out the output docs dir and a way to serve html:
  -{envpython} -c\
  'import pathlib;\
  docs_dir = pathlib.Path(r"{envdir}") / "docs_out";\
  index_file = docs_dir / "index.html";\
  print("\n" + "=" * 120 +\
  f"\n\nDocumentation available under:\n\n\
  \tfile://\{index_file\}\n\nTo serve docs, use\n\n\
  \t$ python3 -m http.server --directory \
  \N\{QUOTATION MARK\}\{docs_dir\}\N\{QUOTATION MARK\} 0\n\n" +\
  "=" * 120)'
isolated_build = true
passenv =
  SSH_AUTH_SOCK
skip_install = false
usedevelop = true


[flake8]
# E203 skipped because it annoys black.
# no pyproject.toml support https://gitlab.com/pycqa/flake8/-/issues/428
show-source = true
extend-ignore =
    E203,
    F401,
max-line-length = 100
builtins = _
extend-exclude =
    # skip tool cache dirs
    *_cache
    # skip project env vars
    .env,
    # skip adjacent venv
    venv
