[base]
pkg_name = ansible_navigator
default_ee = quay.io/ansible/creator-ee:v0.2.0
small_test_ee = quay.io/ansible/python-base
mypy_tmp_dir = mypy_tmp_dir

[tox]
envlist = linters, type, py38, report, clean
minversion = 3.16.1
skipsdist = True
skip_missing_interpreters = true


[testenv]
description = Run pytest under {basepython} ({envpython})
# the pytest command line is not in the project.toml because of issues 
# with catching breakpoints while debugging unit tests
# the number of CPUs is set to 50% b/c CI timeout failures were more likely
# the small test image is used an alternative to the default, but should be it
# one of it's layer
allowlist_externals = cat
                      rm
                      grep
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
    /bin/bash -c 'grep -FInrq "UPDATE_FIXTURES = True" ./tests && exit 1 || exit 0'
    /bin/bash -c 'podman pull {[base]default_ee} || docker pull {[base]default_ee}'
    /bin/bash -c 'podman pull {[base]small_test_ee} || docker pull {[base]small_test_ee}'
    /bin/bash -c 'py.test -vvvv -n `python -c "import multiprocessing; import os; print(int(os.environ.get(\"XDIST_CPU\") or multiprocessing.cpu_count()))"` --dist=loadfile --maxfail=15 --durations=100 --cov ansible_navigator --cov share --cov-report term-missing --cov-branch --showlocals'
setenv =
    TERM = xterm-256color
passenv = HOME
          USER
          XDIST_CPU

[testenv:clean]
description = Erase coverage data
deps = coverage
skip_install = true
commands = coverage erase
           rm -rf ./{[base]mypy_tmp_dir}

[testenv:linters]
description = Enforce quality standards under {basepython} ({envpython})
install_command = pip install {opts} {packages}
commands =
  pylint {[base]pkg_name} tests --ignore=tm_tokenize
  black -v --diff --check {toxinidir}
  flake8 {posargs}
  yamllint -s .

[testenv:report]
description = Produce coverage report
deps = coverage
skip_install = true
commands =
    coverage report
    cat ./{[base]mypy_tmp_dir}/index.txt

# Note included in the default envlist above since it's destructive
# (requires tmux, git, runs a bunch of commands, etc.)
[testenv:smoke]
description = Run smoke tests under {basepython} ({envpython})
commands = ansible-playbook tests/smoketests/run.yml
allowlist_externals = ansible-playbook

[testenv:type]
description = Verify static typing with MyPy under {basepython} ({envpython})
commands =
    mypy --txt-report ./{[base]mypy_tmp_dir} ./src/{[base]pkg_name} ./tests ./share


[testenv:lint]
description =
  Enforce quality standards under `{basepython}` ({envpython})
commands =
  {envpython} -m \
    pre_commit run \
    --show-diff-on-failure \
    --hook-stage manual \
    {posargs:--all-files -v}

  # Print out the advice on how to install pre-commit from this env into Git:
  -{envpython} -c \
  'cmd = "{envpython} -m pre_commit install"; \
    scr_width = len(cmd) + 10; \
    sep = "=" * scr_width; \
    cmd_str = "    $ \{cmd\}";' \
    'print(f"\n\{sep\}\nTo install pre-commit hooks into the Git repo, run:\n\n\{cmd_str\}\n\n\{sep\}\n")'
deps =
  pre-commit
  pylint ~= 2.8.0
  pylint-pytest < 1.1.0
isolated_build = true
skip_install = true


[testenv:build-docs]
allowlist_externals =
  git
deps =
  -r{toxinidir}/docs/requirements.in
  # FIXME: re-enable the "-r" + "-c" paradigm once the pip bug is fixed.
  # Ref: https://github.com/pypa/pip/issues/9243
  # -r{toxinidir}/docs/requirements.in
  # -c{toxinidir}/docs/requirements.txt
description = Build The Docs
changedir = {toxinidir}/docs
commands =
  # Retrieve possibly missing commits:
  -git fetch --unshallow
  -git fetch --tags

  # Build the html docs with Sphinx:
  {envpython} -m sphinx \
    -j auto \
    -b html \
    {tty:--color} \
    -a \
    -n \
    -W --keep-going \
    -d "{temp_dir}/.doctrees" \
    . \
    "{envdir}/docs_out"

  # Print out the output docs dir and a way to serve html:
  -{envpython} -c\
  'import pathlib;\
  docs_dir = pathlib.Path(r"{envdir}") / "docs_out";\
  index_file = docs_dir / "index.html";\
  print("\n" + "=" * 120 +\
  f"\n\nDocumentation available under:\n\n\
  \tfile://\{index_file\}\n\nTo serve docs, use\n\n\
  \t$ python3 -m http.server --directory \
  \N\{QUOTATION MARK\}\{docs_dir\}\N\{QUOTATION MARK\} 0\n\n" +\
  "=" * 120)'
isolated_build = true
passenv =
  SSH_AUTH_SOCK
skip_install = false
usedevelop = true


[testenv:make-changelog]
basepython = python3
depends =
  check-changelog
description =
  Generate a changelog from fragments using Towncrier. Getting an
  unreleased changelog preview does not require extra arguments.
  When invoking to update the changelog, pass the desired version as an
  argument after `--`. For example, `tox -e {envname} -- 1.3.2`.
commands =
  {envpython} -m \
    towncrier.build \
    --version \
    {posargs:'[UNRELEASED DRAFT]' --draft}
deps =
  towncrier == 21.3.0
isolated_build = true
skip_install = true


[testenv:check-changelog]
basepython = {[testenv:make-changelog]basepython}
description =
  Check Towncrier change notes
commands =
  {envpython} -m \
    towncrier.check \
    --compare-with origin/main \
    {posargs:}
deps =
  {[testenv:make-changelog]deps}
isolated_build = {[testenv:make-changelog]isolated_build}
skip_install = {[testenv:make-changelog]skip_install}


[flake8]
# E203 skipped because it annoys black.
# no pyproject.toml support https://gitlab.com/pycqa/flake8/-/issues/428
show-source = true
extend-ignore =
    E203,
    F401,
    # FIXME:
    C409,
    C414,
    Q000,
    WPS100,
    WPS110,
    WPS111,
    WPS112,
    WPS114,
    WPS115,
    WPS118,
    WPS121,
    WPS122,
    WPS201,
    WPS202,
    WPS204,
    WPS210,
    WPS211,
    WPS212,
    WPS213,
    WPS214,
    WPS218,
    WPS219,
    WPS220,
    WPS221,
    WPS223,
    WPS226,
    WPS229,
    WPS230,
    WPS231,
    WPS232,
    WPS234,
    WPS237,
    WPS300,
    WPS301,
    WPS305,
    WPS306,
    WPS318,
    WPS323,
    WPS324,
    WPS326,
    WPS328,
    WPS331,
    WPS334,
    WPS335,
    WPS336,
    WPS337,
    WPS338,
    WPS339,
    WPS347,
    WPS349,
    WPS355,
    WPS360,
    WPS361,
    WPS362,
    WPS404,
    WPS407,
    WPS410,
    WPS412,
    WPS414,
    WPS420,
    WPS421,
    WPS422,
    WPS425,
    WPS426,
    WPS428,
    WPS429,
    WPS430,
    WPS432,
    WPS433,
    WPS436,
    WPS437,
    WPS440,
    WPS441,
    WPS448,
    WPS450,
    WPS453,
    WPS454,
    WPS458,
    WPS500,
    WPS502,
    WPS503,
    WPS504,
    WPS505,
    WPS507,
    WPS510,
    WPS518,
    WPS520,
    WPS525,
    WPS526,
    WPS529,
    WPS600,
    WPS601,
    WPS602,
    WPS603,
    WPS605,
    WPS608,
    WPS609,
    WPS613,
max-line-length = 100
builtins = _
extend-exclude =
    # skip tool cache dirs
    *_cache
    # skip project env vars
    .env,
    # skip adjacent venv
    venv
per-file-ignores =
    src/ansible_navigator/actions/sample_working.py: D107, D200, D210, D400, DAR101, I001, I003, I005
    src/ansible_navigator/actions/save.py: D107, D210, D400, DAR101, I001
    src/ansible_navigator/actions/select.py: C812, D107, D210, D400, DAR101, I001, I004
    src/ansible_navigator/actions/serialize_json.py: D107, D210, D400, DAR101, I001, I003
    src/ansible_navigator/actions/serialize_yaml.py: D107, D210, D400, DAR101, I001, I003
    src/ansible_navigator/actions/stdout.py: D107, D210, D400, DAR101, DAR201, I001
    src/ansible_navigator/actions/template.py: C812, D107, D210, D400, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/actions/welcome.py: C812, D107, D210, D400, DAR101, DAR201, I001, I003, I004
    src/ansible_navigator/actions/write_file.py: C812, D107, D210, D400, DAR101, DAR201, I001, I004
    src/ansible_navigator/app_public.py: D204, D205, D211, D400, I001, I004, I005
    src/ansible_navigator/app.py: C812, D107, D200, D205, D209, D210, D400, D401, D403, DAR101, DAR201, DAR401, I001, I004, I005, N817
    src/ansible_navigator/cli.py: B010, D200, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/command_runner/command_runner.py: C812, D107, D210, D400, D403, DAR101, DAR201, I001, I004, I005, S404, S602
    src/ansible_navigator/command_runner/__init__.py: D210, D400, I001, I005
    src/ansible_navigator/configuration_subsystem/configurator.py: B010, C812, D200, D202, D205, D210, D400, D401, D403, DAR101, DAR201, I001, I003, I004, I005, N817
    src/ansible_navigator/configuration_subsystem/definitions.py: D200, D204, D210, D400, D401, DAR101, DAR201, DAR401, I001, I004, I005
    src/ansible_navigator/configuration_subsystem/__init__.py: D200, D210, D400, I001, I005
    src/ansible_navigator/configuration_subsystem/navigator_configuration.py: D200, D205, D210, D400, DAR201, I001, I003, I004, I005, N812, N817
    src/ansible_navigator/configuration_subsystem/navigator_post_processor.py: B009, B014, C812, D200, D210, D400, DAR101, DAR201, I001, I003, I004, I005, N817
    src/ansible_navigator/configuration_subsystem/parser.py: C812, D107, D200, D210, D400, DAR101, DAR201, I001, I004, I005, N817
    src/ansible_navigator/image_manager/__init__.py: D210, D400, I001
    src/ansible_navigator/image_manager/inspector.py: C812, D107, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/image_manager/puller.py: D107, D210, D400, D403, DAR201, DAR401, I001, I004, I005, S404, S603
    src/ansible_navigator/initialization.py: C812, D202, D205, D210, D400, D403, DAR101, DAR201, I001, I003, I004, I005, N812, N817
    src/ansible_navigator/__init__.py: D200, D210, D400
    src/ansible_navigator/__main__.py: RST304
    src/ansible_navigator/runner/ansible_config.py: C812, C815, D205, D210, D400, I001, I005
    src/ansible_navigator/runner/ansible_doc.py: C815, D205, D210, D400, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/runner/ansible_inventory.py: C815, D205, D210, D400, I001, I005
    src/ansible_navigator/runner/base.py: C812, D202, D205, D210, D400, D401, D403, DAR101, DAR201, I001, I004, I005, RST203, RST301
    src/ansible_navigator/runner/command_async.py: D400, DAR101, DAR201, I003
    src/ansible_navigator/runner/command_base.py: C812, D205, D210, D211, D400, D401, DAR101, I001, I004, I005, RST201, RST301
    src/ansible_navigator/runner/command.py: D202, D205, D210, D400, D403, DAR201
    src/ansible_navigator/runner/__init__.py: D200, D210, D400
    src/ansible_navigator/steps.py: D107, D200, D210, D211, D400, D401, D403, DAR101, DAR201, DAR401, I001, I005
    src/ansible_navigator/tm_tokenize/compiler.py: C812, D100, D101, D102, D107, I001, I004, I005, S101
    src/ansible_navigator/tm_tokenize/fchainmap.py: D100, D101, D105, D107, I001, I005
    src/ansible_navigator/tm_tokenize/grammars.py: D100, D101, D102, D107, E800, I001, I004, I005
    src/ansible_navigator/tm_tokenize/__init__.py: D104
    src/ansible_navigator/tm_tokenize/region.py: D100, D101, I001, I005
    src/ansible_navigator/tm_tokenize/reg.py: C812, D100, D103, E800, I001, I005
    src/ansible_navigator/tm_tokenize/rules.py: C812, D100, D101, D102, D400, I001, I004, I005
    src/ansible_navigator/tm_tokenize/state.py: D100, D101, D102, I001, I004, I005
    src/ansible_navigator/tm_tokenize/tokenize.py: C812, D100, D201, D400, D403, DAR101, DAR201, I001, I005
    src/ansible_navigator/tm_tokenize/utils.py: D100, D400, D403, DAR101, DAR201, I004
    src/ansible_navigator/ui_framework/colorize.py: C812, D107, D200, D205, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/ui_framework/curses_defs.py: D200, D210, D400, I001, I005
    src/ansible_navigator/ui_framework/curses_window.py: C812, D107, D200, D202, D205, D209, D210, D400, D401, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/ui_framework/field_button.py: D200, D205, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/ui_framework/field_checks.py: D200, D204, D205, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/ui_framework/field_information.py: D200, D204, D205, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/ui_framework/field_option.py: D200, D205, D210, D400, D403, DAR101, DAR201, DAR401, I001
    src/ansible_navigator/ui_framework/field_radio.py: D200, D204, D205, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/ui_framework/field_text.py: D200, D204, D205, D210, D400, D401, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/ui_framework/field_working.py: D200, D204, D205, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/ui_framework/form_defs.py: D200, D210, D400
    src/ansible_navigator/ui_framework/form_handler_button.py: D107, D200, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/ui_framework/form_handler_information.py: D107, D200, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/ui_framework/form_handler_options.py: D107, D200, D201, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/ui_framework/form_handler_text.py: D107, D200, D205, D210, D300, D400, D403, DAR101, DAR201, I001, I004, Q002
    src/ansible_navigator/ui_framework/form_handler_working.py: D107, D205, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/ui_framework/form_presenter.py: C812, D107, D200, D210, D400, D403, DAR201, I001, I003, I004, I005
    src/ansible_navigator/ui_framework/form.py: C812, D200, D205, D210, D400, D403, DAR101, DAR201, I001, I005
    src/ansible_navigator/ui_framework/form_utils.py: D200, D205, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/ui_framework/__init__.py: D200, D210, D400, I001, I004, I005
    src/ansible_navigator/ui_framework/menu_builder.py: C812, D107, D200, D210, D400, D401, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/ui_framework/sentinals.py: D102, D105, D205, D210, D400, I001, I005
    src/ansible_navigator/ui_framework/ui_config.py: D205, D210, D400
    src/ansible_navigator/ui_framework/ui.py: C401, C408, C812, D200, D202, D205, D210, D211, D400, D403, DAR101, DAR201, DAR401, I001, I003, I004, I005
    src/ansible_navigator/ui_framework/utils.py: D200, D205, D210, D400, D403, DAR101, DAR201, I004
    src/ansible_navigator/ui_framework/validators.py: B006, C812, D200, D210, D400, D401, D403, DAR101, DAR201, DAR401, I001, I004, I005, S311
    src/ansible_navigator/utils.py: C408, C812, D105, D200, D202, D205, D210, D400, D401, D403, DAR101, DAR201, DAR401, E302, I001, I003, I004, I005, RST304
    src/ansible_navigator/_version.py: D210, D400, D412
    src/ansible_navigator/_yaml.py: D210, D400, D401, DAR101, DAR201, I001, I004, I005
    tests/conftest.py: D210, D400, D401, D403, DAR101, DAR201, DAR301, DAR401, PT003, S103, S404, S603
    tests/defaults.py: C812, D200
    tests/fixtures/common/collections/ansible_collections/testorg/coll_1/plugins/modules/mod_1.py: E800
    tests/__init__.py: D104
    tests/integration/_action_run_test.py: C812, D107, D205, D210, D400, D401, D403, DAR101, DAR201, DAR401, I001, I004, I005, N817
    tests/integration/actions/collections/base.py: C812, D200, D202, D210, D400, D403, DAR101, DAR301, DAR401, I001, I004, I005, PT005, S101
    tests/integration/actions/collections/__init__.py: D104
    tests/integration/actions/collections/test_direct_interactive_ee.py: D200, D210, D400, I004, PT006
    tests/integration/actions/collections/test_direct_interactive_noee.py: D200, D210, D400, PT006
    tests/integration/actions/collections/test_welcome_interactive_ee.py: D200, D210, D400, I004, PT006
    tests/integration/actions/collections/test_welcome_interactive_noee.py: D200, D210, D400, PT006
    tests/integration/actions/config/base.py: C812, D200, D202, D210, D400, D403, DAR101, DAR301, DAR401, I001, I005, S101
    tests/integration/actions/config/__init__.py: D104
    tests/integration/actions/config/test_direct_interactive_ee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/config/test_direct_interactive_noee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/config/test_stdout_tmux.py: D210, D400, D403, DAR101, DAR201, I001, I004, I005
    tests/integration/actions/config/test_welcome_interactive_ee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/config/test_welcome_interactive_noee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/config/test_welcome_interactive_param_use.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/config/test_welcome_interactive_specified_config.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/doc/base.py: C812, D200, D210, D400, D403, DAR101, DAR301, DAR401, I001, I004, I005, S101
    tests/integration/actions/doc/__init__.py: D104
    tests/integration/actions/doc/test_direct_interactive_ee.py: C812, D200, D210, D400, I004, PT006
    tests/integration/actions/doc/test_direct_interactive_noee.py: C812, D200, D210, D400, I001, I003, PT006
    tests/integration/actions/doc/test_stdout.py: D200, D210, D400, I004, PT006
    tests/integration/actions/doc/test_welcome_interactive_ee.py: C812, D200, D210, D400, I004, PT006
    tests/integration/actions/doc/test_welcome_interactive_noee.py: C812, D200, D210, D400, I004, PT006
    tests/integration/actions/images/base.py: C812, D200, D202, D210, D400, D403, DAR101, DAR301, DAR401, I001, I005, S101
    tests/integration/actions/images/__init__.py: D104
    tests/integration/actions/images/test_direct_interactive_ee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/images/test_direct_interactive_noee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/images/test_welcome_interactive_ee.py: C812, D200, D210, D400, I001, I004, I005
    tests/integration/actions/images/test_welcome_interactive_noee.py: C812, D200, D210, D400, I001, I004, I005
    tests/integration/actions/__init__.py: D104
    tests/integration/actions/inventory/base.py: C812, D200, D201, D210, D400, D403, DAR101, DAR301, DAR401, I001, I005, S101
    tests/integration/actions/inventory/__init__.py: D104
    tests/integration/actions/inventory/test_direct_interactive_ee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/inventory/test_direct_interactive_noee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/inventory/test_stdout_tmux.py: C812, D210, D400, D403, DAR101, DAR201, I001, I005
    tests/integration/actions/inventory/test_welcome_interactive_ee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/inventory/test_welcome_interactive_noee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/replay/base.py: C812, D200, D201, D210, D400, D403, DAR101, DAR301, I001, I005, S101
    tests/integration/actions/replay/__init__.py: D104
    tests/integration/actions/replay/test_direct_interactive_ee.py: D200, D400, I001, I004, I005, PT006
    tests/integration/actions/replay/test_direct_interactive_noee.py: D200, D210, D400, I001, I005, PT006
    tests/integration/actions/replay/test_welcome_interactive_ee.py: D200, D210, D400, I001, I004, I005, PT006
    tests/integration/actions/replay/test_welcome_interactive_noee.py: D200, D210, D400, I001, I005, PT006
    tests/integration/actions/run/base.py: C812, D200, D202, D210, D400, D403, DAR101, DAR301, I001, I003, I004, I005, S101
    tests/integration/actions/run/__init__.py: D104
    tests/integration/actions/run/test_direct_interactive_ee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/run/test_direct_interactive_noee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/run/test_stdout_tmux.py: D210, D400, D403, DAR101, DAR201, I001, I005
    tests/integration/actions/run/test_welcome_interactive_ee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/run/test_welcome_interactive_noee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/stdout/base.py: C812, D200, D201, D210, D400, D403, DAR101, DAR301, I001, I005, S101
    tests/integration/actions/stdout/__init__.py: D104
    tests/integration/actions/stdout/test_direct_interactive_ee.py: D200, D400, I001, I004, I005, PT006
    tests/integration/actions/stdout/test_direct_interactive_noee.py: D200, D210, D400, I001, I005, PT006
    tests/integration/actions/stdout/test_welcome_interactive_ee.py: D200, D210, D400, I001, I004, I005, PT006
    tests/integration/actions/stdout/test_welcome_interactive_noee.py: D200, D210, D400, I001, I004, I005, PT006
    tests/integration/actions/templar/base.py: C812, D200, D202, D210, D400, D403, DAR101, DAR301, I001, I004, I005, S101
    tests/integration/actions/templar/__init__.py: D104
    tests/integration/actions/templar/test_direct_interactive_ee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/templar/test_direct_interactive_noee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/templar/test_welcome_interactive_ee.py: D200, D210, D400, I001, I004, I005
    tests/integration/actions/templar/test_welcome_interactive_noee.py: D200, D210, D400, I001, I004, I005
    tests/integration/_cli2runner.py: C812, D200, D210, D400, D401, D403, DAR101, DAR401
    tests/integration/_common.py: B005, C812, D103, D200, D210, D400, D401, D403, DAR101, DAR201, DAR401, I001, I004
    tests/integration/conftest.py: D205, D210, D400, D401, D403, DAR101, DAR201, DAR301, I003, PT001, PT003, PT004, PT022, S108
    tests/integration/__init__.py: D104
    tests/integration/_interactions.py: D200, D204, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    tests/integration/test_execution_environment_image.py: C812, D200, D205, D210, D400, D403, DAR101, I001, I004, I005, S101
    tests/integration/test_execution_environment.py: C812, D200, D205, D210, D400, D403, DAR101, I001, I004, S101
    tests/integration/test_pass_environment_variable.py: C812, D200, D205, D210, D400, D403, DAR101, I001, I004, S101
    tests/integration/test_set_environment_variable.py: C812, D200, D205, D210, D400, D403, DAR101, I001, I004, S101
    tests/integration/test_stdout_exit_codes.py: D200, D210, D400, D403, DAR101, DAR201, I001, I004, I005, S101
    tests/integration/_tmux_session.py: C812, D105, D107, D205, D210, D400, D403, DAR101, DAR201, DAR401, I001, I004, I005
    tests/unit/actions/__init__.py: D104
    tests/unit/actions/test_config.py: D200, D400, D403, I001, I004, I005, S101
    tests/unit/actions/test_inventory.py: D200, D400, D403, I001, I004, I005, S101
    tests/unit/actions/test_run.py: C812, D200, D400, DAR101, DAR201, I001, I004, I005, N813, PT019, S101, S108
    tests/unit/configuration_subsystem/conftest.py: D200, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    tests/unit/configuration_subsystem/data.py: C812, D205, D210, D400, D403, DAR101, DAR201, S108
    tests/unit/configuration_subsystem/defaults.py: D200, D210, D400
    tests/unit/configuration_subsystem/__init__.py: D104
    tests/unit/configuration_subsystem/test_broken_settings.py: D200, D400, DAR101, S101
    tests/unit/configuration_subsystem/test_configurator.py: D200, D205, D209, D400, DAR101, I001, I004, I005, N817, PT019, S101
    tests/unit/configuration_subsystem/test_container_engine_auto.py: D200, DAR101, S101
    tests/unit/configuration_subsystem/test_entries_sanity.py: C812, D200, D210, D400, DAR101, I001, I005, N817, S101
    tests/unit/configuration_subsystem/test_fixture_sanity.py: D205, D400, I001, I004, I005, S101
    tests/unit/configuration_subsystem/test_invalid_params.py: D200, D202, D400, DAR101, I003, I004, PT006, PT019, S101
    tests/unit/configuration_subsystem/test_mode_subcommand_action.py: D205, D210, D400, I001, I004, I005, S101
    tests/unit/configuration_subsystem/test_precedence.py: C812, D205, D210, D400, DAR101, I001, I003, I004, I005, N817, PT006, PT019, S101
    tests/unit/configuration_subsystem/test_previous_cli.py: C812, D202, D205, D210, D400, I001, I004, I005, N817, PT019, S101, S108
    tests/unit/configuration_subsystem/test_sample_configurations.py: D205, D210, D400, I001, I004, I005, S101
    tests/unit/configuration_subsystem/utils.py: D200, D210, D400, DAR101, DAR201
    tests/unit/image_manager/__init__.py: D104
    tests/unit/image_manager/test_image_puller.py: C812, D210, D400, D403, DAR101, DAR201, I001, I003, I004, I005, S101
    tests/unit/__init__.py: D104
    tests/unit/runner/test_api.py: D200, D202, D210, D400, D403, DAR101, PT006, S101, S108
    tests/unit/test_cli.py: C812, D200, D202, D205, D210, D400, D403, DAR101, DAR201, I001, I005, PT006, PT019, S101, S108
    tests/unit/test_image_introspection.py: C812, D200, D210, D400, D403, DAR101, DAR201, I003, S101
    docs/conf.py: E800, I004
    docs/_ext/single_sourced_data.py: D400, D403, DAR101, DAR201, E800, I001, I004, N817, P103
    setup.py: D210, D400, E800
    share/ansible_navigator/utils/catalog_collections.py: C812, D107, D200, D210, D400, D401, D403, DAR101, DAR201, I001, I003, I004, I005, S404, S602
    share/ansible_navigator/utils/image_introspect.py: C812, D101, D102, D107, D205, D209, D210, D400, D401, D403, DAR101, DAR201, I001, I004, I005, S404, S602
    share/ansible_navigator/utils/key_value_store.py: D105, D107, D200, D210, D400, D403, DAR101, DAR201, DAR301, DAR401
    share/ansible_navigator/utils/__init__.py: D104
    src/ansible_navigator/action_runner.py: C812, D107, D200, D210, D400, D403, DAR101, I001, I005
    src/ansible_navigator/actions/__init__.py: C812, D210, D400, I001, I004, I005
    src/ansible_navigator/actions/_actions.py: D210, D400, D401, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/actions/back.py: C812, D107, D210, D400, DAR101, I001
    src/ansible_navigator/actions/collections.py: C812, D102, D107, D201, D202, D205, D210, D400, D403, DAR101, DAR201, I001, I003, I004, I005
    src/ansible_navigator/actions/config.py: C405, C812, D107, D201, D202, D205, D210, D400, D403, DAR101, DAR201, DAR401, I001, I003, I004, I005
    src/ansible_navigator/actions/doc.py: C812, D107, D202, D210, D400, D403, DAR101, DAR201, DAR401, I001, I004, I005, N817
    src/ansible_navigator/actions/filter.py: D107, D210, D400, DAR101, I001, I003
    src/ansible_navigator/actions/help_doc.py: C812, D107, D210, D400, DAR101, DAR201, I001, I003
    src/ansible_navigator/actions/images.py: C812, D107, D201, D210, D400, D403, DAR101, DAR201, I001, I004, I005
    src/ansible_navigator/actions/inventory.py: C812, D102, D107, D202, D205, D210, D400, D403, DAR101, DAR201, I001, I004, I005, N806
    src/ansible_navigator/actions/log.py: D107, D210, D400, DAR101, DAR201, I001
    src/ansible_navigator/actions/open_file.py: D105, D107, D210, D400, DAR101, DAR201, I001, I004, I005, S605
    src/ansible_navigator/actions/quit.py: D107, D200, D210, D400, DAR101, DAR201, I001, I003
    src/ansible_navigator/actions/refresh.py: D107, D210, D400, DAR101, E800, I001, I003
    src/ansible_navigator/actions/replay.py: D200, D400
    src/ansible_navigator/actions/rerun.py: D107, D210, D400, DAR101, I001, I003, I004
    src/ansible_navigator/actions/run.py: B014, C812, D107, D200, D202, D205, D209, D210, D400, D401, D403, DAR101, DAR201, DAR401, E800, I001, I003, I004, I005, N806
    src/ansible_navigator/actions/sample_form.py: D107, D200, D210, D400, DAR101, DAR201, I001, I005
    src/ansible_navigator/actions/sample_notification.py: D107, D200, D210, D400, DAR101, DAR201, I001, I005
    tests/unit/test_log_append.py: D200, D400, D403, DAR101, S101
    tests/unit/test_utils.py: C812, D200, D202, D210, D400, D403, DAR101, I001, I004, I005, PT006, S101
    tests/unit/test_yaml.py: D200, S101
    tests/unit/ui_framework/test_colorize.py: C812, D200, D205, D209, D400, DAR101, I001, I004, S101
