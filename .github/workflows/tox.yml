name: tox

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  create: # is used for publishing to PyPI and TestPyPI
    tags: # any tag regardless of its name, no branches
      - "**"
  push: # only publishes pushes to the main branch to TestPyPI
    branches: # any integration branch but not tag
      - "main"
  pull_request:

jobs:
  pre:
    name: pre
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.generate_matrix.outputs.matrix }}
    steps:
      - name: Determine matrix
        id: generate_matrix
        uses: coactions/dynamic-matrix@v1
        with:
          min_python: "3.9"
          max_python: "3.11"
          default_python: "3.11" # used by jobs in other_names
          other_names: |
            lint
            docs
  tox:
    name: ${{ matrix.name }} / python ${{ matrix.python_version }}
    runs-on: ubuntu-20.04
    needs: pre
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.pre.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # needed by setuptools-scm

      - name: Cache container images
        if: ${{ startsWith(matrix.passed_name, 'py') }}
        uses: actions/cache@v3
        with:
          path: |
            ~/.local/share/containers
          key: ${{ runner.os }}-${{ hashFiles('src/ansible_navigator/data/images_dockerfile') }}

      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install tox
        run: python3 -m pip install --upgrade "tox>=4.0.2"

      - name: Log Python info (${{ matrix.python_version }})
        run: |
          command -v python
          python --version --version
          python3 -m pip freeze --all

      - name: "tox -e ${{ matrix.passed_name }}"
        continue-on-error: ${{ matrix.devel || false }}
        run: python3 -m tox -e ${{ matrix.passed_name }}

      - name: tox -e no-test-deps
        if: ${{ startsWith(matrix.passed_name, 'py') }}
        continue-on-error: ${{ matrix.devel || false }}
        run: python3 -m tox -e no-test-deps

      - name: Upload coverage data
        if: ${{ startsWith(matrix.passed_name, 'py') }}
        uses: codecov/codecov-action@v3
        with:
          name: ${{ matrix.passed_name }}
          fail_ci_if_error: false # see https://github.com/codecov/codecov-action/issues/598
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true # optional (default = false)
      - name: Change accessibility for cache
        if: ${{ startsWith(matrix.passed_name, 'py') }}
        run: podman unshare chmod -R 755 ~/.local/share/containers/

  check: # This job does nothing and is only used for the branch protection
    if: always()

    needs:
      - tox
    runs-on: ubuntu-22.04
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
