name: tox

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  create: # is used for publishing to PyPI and TestPyPI
    tags: # any tag regardless of its name, no branches
      - "**"
  push: # only publishes pushes to the main branch to TestPyPI
    branches: # any integration branch but not tag
      - "main"
  pull_request:

jobs:
  tox:
    name: ${{ matrix.tox_env }} / python ${{ matrix.python-version }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        tox_env:
          - lint
          - docs
        python-version:
          - "3.10"
        include:
          - tox_env: py38
            python-version: 3.8
          - tox_env: py39
            python-version: 3.9
          - tox_env: py310
            python-version: "3.10"
          - tox_env: py311
            python-version: "~3.11.0-0" # see https://github.com/actions/setup-python/issues/213#issuecomment-1146676713

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # needed by setuptools-scm

      - name: Install system dependencies
        # oniguruma.h is needed on py311 because onigurumacffi does not yet
        # have pre-compiled wheels for it.
        if: contains(matrix.os, 'ubuntu')
        run: sudo apt-get install -y libonig-dev tmux

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: >-
          Log the currently selected Python
          version info (${{ matrix.python-version }})
        run: |
          python --version --version
          which python
      - name: Install tox
        run: |
          python3 -m pip install --upgrade tox
      - name: Log installed dists
        run: >-
          python3 -m pip freeze --all
      - name: "tox -e ${{ matrix.tox_env }}"
        continue-on-error: ${{ matrix.devel || false }}
        run: |
          python3 -m tox
        env:
          TOXENV: ${{ matrix.tox_env }}
      - name: tox -e no-test-deps
        if: ${{ startsWith(matrix.tox_env, 'py') }}
        continue-on-error: ${{ matrix.devel || false }}
        run: python3 -m tox -e no-test-deps
      - name: Upload coverage data
        uses: codecov/codecov-action@v2
        with:
          directory: .tox
          files: "coverage-*.xml"
          name: ${{ matrix.tox_env }}
          verbose: true # optional (default = false)
        if: ${{ startsWith(matrix.tox_env, 'py') }}

  check: # This job does nothing and is only used for the branch protection
    if: always()

    needs:
      - tox
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
